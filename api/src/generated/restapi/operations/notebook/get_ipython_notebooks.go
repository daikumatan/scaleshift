// Code generated by go-swagger; DO NOT EDIT.

package notebook

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetIpythonNotebooksHandlerFunc turns a function with the right signature into a get ipython notebooks handler
type GetIpythonNotebooksHandlerFunc func(GetIpythonNotebooksParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetIpythonNotebooksHandlerFunc) Handle(params GetIpythonNotebooksParams) middleware.Responder {
	return fn(params)
}

// GetIpythonNotebooksHandler interface for that can handle valid get ipython notebooks params
type GetIpythonNotebooksHandler interface {
	Handle(GetIpythonNotebooksParams) middleware.Responder
}

// NewGetIpythonNotebooks creates a new http.Handler for the get ipython notebooks operation
func NewGetIpythonNotebooks(ctx *middleware.Context, handler GetIpythonNotebooksHandler) *GetIpythonNotebooks {
	return &GetIpythonNotebooks{Context: ctx, Handler: handler}
}

/*GetIpythonNotebooks swagger:route GET /notebooks/{id}/ipynbs notebook getIpythonNotebooks

returns ipynb files on the specified notebook


*/
type GetIpythonNotebooks struct {
	Context *middleware.Context
	Handler GetIpythonNotebooksHandler
}

func (o *GetIpythonNotebooks) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetIpythonNotebooksParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
