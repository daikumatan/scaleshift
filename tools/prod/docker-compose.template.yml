version: "2.4"

services:
  api:
    image: scaleshift/api:%{version}
    environment:
      - SS_MUST_SIGN_IN=false
      - SS_JUPYTER_MINIMUM_PORT=30000
      - SS_MAX_WORKERS=2
      - SS_DOCKER_REGISTRY_ENDPOINT
      - SS_DOCKER_REGISTRY_HOST_NAME
      - SS_RESCALE_SINGULARITY_VERSION=3.2.0
      - SS_RESCALE_JOB_WALLTIME=3600
      - SS_LOG_LEVEL=debug
      - SS_WORKSPACE_HOST_DIR=${PWD}/scaleshift/workspaces
      - SS_SINGULARITY_HOST_DIR=${PWD}/scaleshift/simages
    volumes:
      - ${PWD}/scaleshift/workspaces:/tmp/work
      - ${PWD}/scaleshift/simages:/tmp/simg
      - database-cache:/tmp/badger
      - /var/run/docker.sock:/var/run/docker.sock
    # depends_on:
    #   db:
    #     condition: service_healthy
    restart: always
    container_name: api

  web:
    image: scaleshift/web:%{version}
    logging:
      driver: none
    restart: always
    container_name: web

  proxy:
    image: scaleshift/proxy:1.11
    ports:
      - "%{publish_port}:80"
    logging:
      driver: none
    restart: always
    container_name: proxy

  db:
    image: scaleshift/mysql:5.6
    volumes:
      - database-mysql:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqlshow -u ${MYSQL_USER} -p${MYSQL_PASSWORD}"]
      interval: "5s"
      retries: 10
    logging:
      driver: none
    restart: always
    container_name: db

volumes:
  database-cache:
  database-mysql:
